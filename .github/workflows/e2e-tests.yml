name: E2E tests

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      network:
        default: mainnet
        type: choice
        description: network to use
        options:
          - mainnet
          - preprod

run-name: "E2E Test | network: ${{ github.event.inputs.network }} | #${{ github.run_number }}"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BLOCKFROST_PROJECT_ID: ${{
        github.event.inputs.network == 'mainnet' && secrets.BLOCKFROST_MAINNET_PROJECT_ID ||
        github.event.inputs.network == 'preprod' && secrets.BLOCKFROST_PREPROD_PROJECT_ID ||
        'preprod1abiUKhLuQ3Ic1n6ctxilFMtlGNozC5h'
        }}
      BLOCKFROST_NETWORK: ${{ github.event.inputs.network || 'preprod' }}
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - run: yarn run build
      - name: Start service
        run: |
          yarn start &
          npx wait-on http://localhost:3005
      - run: yarn run test:e2e

      - name: Publish test artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-artifacts
          path: |
            ./allure-test-reports

      - name: Publish allure report to S3
        uses: andrcuns/allure-publish-action@v2.6.0
        if: always()
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
        with:
          storageType: s3
          resultsGlob: './allure-test-reports/allure-results'
          bucket: tests-results
          prefix: $GITHUB_REF
          copyLatest: true
          updatePr: true
          ignoreMissingResults: true
